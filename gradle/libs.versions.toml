[versions]
agp = "8.10.0"
coreKtx = "1.16.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
lifecycleRuntimeKtx = "2.9.0"
activityCompose = "1.10.1"
composeBom = "2024.09.00"

accompanistSystemuicontroller = "0.31.4-beta"
foundation = "1.8.0"
lottieCompose = "6.0.0"
retrofitVersion = "2.9.0"
coreSplashscreen = "1.0.1"
hiltAndroid = "2.55"
hiltNavigationCompose = "1.2.0"
navigationCompose = "2.8.9"
kotlin = "2.1.20"
ksp = "2.1.20-1.0.31"
roomCompiler = "2.7.1"
coil = "2.5.0"
googleGmsGoogleServices = "4.4.2"
firebaseDatabase = "21.0.0"
androidx-lifecycle = "2.9.0"
accompanistPager = "0.34.0"
#Testing dependencies
mockito = "5.11.0"
mockito-kotlin = "5.1.0"
kotlinx-coroutines-test = "1.8.0"
kotlin-test-junit = "2.1.20"
core-testing = "2.2.0"
mockk = "1.13.11"
turbine = "1.1.0"
androidxNavigation = "2.9.0"
navigationTestingAndroid = "2.9.0"
navigationeventAndroid = "1.0.0-alpha01"



[libraries]

androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }


#//Splash Api
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }

#//Dagger Hilt
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hiltAndroid" }
hilt-android-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hiltAndroid" }
#HiltNavigationCompose
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
#//Compose Navigation
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
#Retrofit
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofitVersion" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
#ROOM
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "roomCompiler" }
roomRuntime = { group = "androidx.room", name = "room-runtime", version.ref = "roomCompiler" }
roomKtx = { group = "androidx.room", name = "room-ktx", version.ref = "roomCompiler" }
#Accompanist-Pager - Library of composables -> provide a way to implement a paging layout, similar to a ViewPager in older development
accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanistPager" }
accompanist-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanistPager" }
#-----------------------------------Instead of this we're using Compose foundatio for pager and all.
#ComposeFoundation
androidx-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "foundation" }

#//For SavedStatehandle
androidx-lifecycle-viewmodel-savedstate = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
#//Accompanist
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanistSystemuicontroller" }

#// lottie - for Animation
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieCompose" }

#Coil - For Image Library
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

#Firebase
firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }

#Testing Dependencies
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
mockito-kotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockito-kotlin" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx-coroutines-test" }
kotlin-test-junit = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit", version.ref = "kotlin-test-junit" }
#For InstantTaskExecutorRule
core-testing = { group = "androidx.arch.core", name = "core-testing", version.ref = "core-testing" }
#For testing Flows easily
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
#// For mocking dependencies (or use Mockito)
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }


# Navigation Testing
androidx-navigation-testing = { group = "androidx.navigation", name = "navigation-testing", version.ref = "androidxNavigation" }
androidx-navigation-testing-android = { group = "androidx.navigation", name = "navigation-testing-android", version.ref = "navigationTestingAndroid" }
androidx-navigationevent-android = { group = "androidx.navigationevent", name = "navigationevent-android", version.ref = "navigationeventAndroid" }



[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

#hilt
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hiltAndroid" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
google-gms-google-services = { id = "com.google.gms.google-services", version.ref = "googleGmsGoogleServices" }

[bundles]
test-local-unit = [
    "mockito-core",
    "mockito-kotlin",
    "kotlinx-coroutines-test",
    "kotlin-test-junit",
    "core-testing",
    "turbine",
    "mockk",
    "androidx-navigation-testing"
]